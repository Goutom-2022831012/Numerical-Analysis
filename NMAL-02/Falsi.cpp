#include <bits/stdc++.h>
using namespace std;

double f(double x) {
    return log(3 * x) - 3;
}

void falsePosition(double a, double b, double tol = 1e-4) {
    if (f(a) * f(b) >= 0) {
        cout << "Invalid" << endl;
        return;
    }
    double c = 0, prev_c = 0;
    double error = 100;
    int i = 0;
    cout << fixed << setprecision(6);
    cout << "Iteration\t"
         << "a\t\tf(a)\t\tb\t\tf(b)\t\tc\t\tf(c)\t\tError\n";
    while (error > tol) {
        prev_c = c;
        c = (a * f(b) - b * f(a)) / (f(b) - f(a));
        if (i != 0)
            error = fabs((c - prev_c) / c);
        else
            error = 100;
        cout << i << "\t\t" << a << "\t" << f(a) << "\t"<< b << "\t" << f(b) << "\t" << c << "\t" << f(c) << "\t" << error << "\n";
        if (f(c) == 0.0)
            break;
          // Check if root found
        if (fabs(f(c)) < tol) {
            break;
        }
        if (f(a) * f(c) < 0)
            b = c;
        else
            a = c;
        i++;
    }
    cout << "\nRoot = " << c << endl;
}

int main() {
    double a = 1, b = 10;
    falsePosition(a, b);
    return 0;
}
/*
Iteration       a               f(a)            b               f(b)            c               f(c)              Error
0               1.000000        -1.901388       10.000000       0.401197        8.431860        0.230630  100.000000
1               1.000000        -1.901388       8.431860        0.230630        7.627923        0.130428  0.105394
2               1.000000        -1.901388       7.627923        0.130428        7.202458        0.073035  0.059072
3               1.000000        -1.901388       7.202458        0.073035        6.973027        0.040662  0.032903
4               1.000000        -1.901388       6.973027        0.040662        6.847966        0.022564  0.018262
5               1.000000        -1.901388       6.847966        0.022564        6.779382        0.012498  0.010117
6               1.000000        -1.901388       6.779382        0.012498        6.741641        0.006916  0.005598
7               1.000000        -1.901388       6.741641        0.006916        6.720833        0.003824  0.003096
8               1.000000        -1.901388       6.720833        0.003824        6.709350        0.002114  0.001712
10              1.000000        -1.901388       6.703008        0.001169        6.699505        0.000646  0.000523
11              1.000000        -1.901388       6.699505        0.000646        6.697569        0.000357  0.000289
12              1.000000        -1.901388       6.697569        0.000357        6.696500        0.000197  0.000160
13              1.000000        -1.901388       6.696500        0.000197        6.695909        0.000109  0.000088

Root = 6.695909*/